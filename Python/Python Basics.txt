Variables:
defining a variable:
num = 123

Python data bases:
- Numeric data bases: int, float, complex numbers
- Booleans
- Sequences: List = ["object1", "object2", "object3"]
	     Tuples = ("object1", "object2", "object3") - immutable, unchangable, like a const.
             Sets = {"object1", "object2", "object3"} - like a list but deletes any duplicates.

f-strings:
name = "Nadav"
print(f"{name}") - will print Nadav. Used for using variables inside strings.

List functions: 
lst[i] - returns the value in location i
len(lst) - returns the length of the list
lst.append(var) - pushed the object into place 0 in the list and pushed the other objects respectfully.
lst.remove(var) - removes the object from the list
lastItem=lst.pop() - assigns the value of the last item from the list to lastItem and deletes it from lst.
print ([1,2]+[3]) -> [1,2,3]
print (1 in [1,2,3]) -> True

max(lst) - returs the highest value in the list.
min(lst) - returns the lowest value in the list.
sorted(lst) - sorts the list from smallest to biggest.
sum(lst) - returns the sum of the list, relevant to numbers. 
L = list(str) - turns string into a list
str = "".join(list) - turns a list into a string

Dictionaries:
dictName={
    "key1":"value1",
    "key2':"value2",
    "key3":"value3"
}
print(dictName["key1"]) -> Will print "value1".
dictName["key4"]="value4" -> Adds a new key to the dictionary and assigns a value to it.
del dictName["key4"] -> Deletes the key from the dictionary.
dictName.keys() -> Returns a list of the keys in the dictionary.
dictName.values() -> Returns a list of the values in the dictionary.
dictName.get(insertedKey) -> receives a key and returns the value of the key givem, in this case the variable "insertedKey". Returns None in case of invalid key.
dictName.items() -> Returns a list of the dictionary content in the form of [("key1","value1"),("key2","value2"),("key3","value3")].

Tuples: